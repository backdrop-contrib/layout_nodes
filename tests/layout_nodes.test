<?php
/**
 * @file
 * Tests for layout_nodes.module.
 */


/**
 * Tests creating and saving a node.
 */
class LayoutNodesTest extends BackdropWebTestCase {
  function setUp() {
    // Enable dummy module that implements hook_node_insert for exceptions.
    parent::setUp('layout_nodes');

    $web_user = $this->backdropCreateUser(array('create page content', 'edit own page content', 'administer layout nodes'));
    $this->backdropLogin($web_user);
  }

  /**
   * Creates a "Page" node and verifies its consistency in the database.
   */
  function testLayoutNodeCreation() {
    // Enable layouts on Page types.
    $edit = array();
    $langcode = LANGUAGE_NONE;
    $edit['layout_node_types[page]'] = 'page';
    $this->backdropPost('admin/structure/layout_nodes/settings/layout-node', $edit, t('Save configuration'));

    // Create a node.
    $this->backdropGet('node/add/post');
    $this->assertNoText('Choose layout', 'Layout not enabled on Post type.');
    $this->backdropGet('node/add/page');
    $this->assertText('Choose layout', 'Layout enabled on Page type.');
    $edit = array(
      'layout_template' => 'boxton',
    );
    $this->backdropPost(NULL, $edit, t('Save layout'));
    $langcode = LANGUAGE_NONE;
    $edit = array();
    $edit["title"] = $this->randomName(8);
    $edit["body[$langcode][0][value]"] = $this->randomName(16);
    $this->backdropPost(NULL, $edit, t('Save'));

    // Check that the Page has been created.
    $this->assertRaw(t('!post %title has been created.', array('!post' => 'Page', '%title' => $edit["title"])), 'Page created.');

    // Check that the node exists in the database.
    $node = $this->backdropGetNodeByTitle($edit["title"]);
    $this->assertTrue($node, 'Node found in database.');

    $this->clickLink(t('Edit blocks'));

  }

}

